name: tests

on:
    push:
        branches:
            - "**"
    pull_request:
        types: [ ready_for_review, synchronize, opened ]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                php: [ 7.2, 7.3, 7.4, 8.0, 8.1]
                laravel: [ 5.8.*, 6.*, 7.*, 8.*, 9.* ]
                stability: [ prefer-lowest, prefer-stable ]
                exclude:
                    -   php: 7.2
                        laravel: 8.*
                    -   php: 8.0
                        laravel: 5.8.*

        name: PHP:${{ matrix.php }} / Laravel:${{ matrix.laravel }}(${{ matrix.stability }})

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
                    tools: composer:v2
                    coverage: none

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-${{ matrix.stability }}-composer-${{ hashFiles('composer.json') }}
                    restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-${{ matrix.stability }}-composer-

            -   name: Install dependencies
                run: |
                    composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --dev
                    composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-suggest

            -   name: Execute tests
                run: vendor/bin/phpunit
